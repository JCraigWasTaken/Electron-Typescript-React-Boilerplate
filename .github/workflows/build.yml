name: Build

on:
    workflow_dispatch:
        inputs:
            pr_number:
                description: 'PR number to build'
                required: true
            commit_sha:
                description: 'Commit SHA to build'
                required: true

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@v4
              with:
                ref: ${{ github.event.inputs.commit_sha }}

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci --legacy-peer-deps

            - name: Cache build outputs
              uses: actions/cache@v4
              with:
                  path: |
                      dist
                      .webpack
                  key: ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-${{ github.event.inputs.commit_sha }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ hashFiles('**/package-lock.json') }}-
                      ${{ runner.os }}-build-

            # OS-specific distribution builds
            - name: Build distribution (Windows)
              if: matrix.os == 'windows-latest'
              run: npm run dist:win

            - name: Build distribution (macOS)
              if: matrix.os == 'macos-latest'
              run: npm run dist:mac

            - name: Build distribution (Linux)
              if: matrix.os == 'ubuntu-latest'
              run: npm run dist:linux

            - name: Upload distribution artifacts
              if: always()  # Upload artifacts even if build fails
              uses: actions/upload-artifact@v4
              with:
                  name: dist-${{ matrix.os }}
                  path: release/
                  retention-days: 7

            # Add a comment to the PR with build status
            - name: Comment PR
              if: always()
              uses: actions/github-script@v7
              with:
                script: |
                    const outcome = '${{ job.status }}' === 'success' ? '✅' : '❌';
                    const platform = '${{ matrix.os }}'.replace('-latest', '');
                    github.rest.issues.createComment({
                        owner: context.repo.owner,
                        repo: context.repo.name,
                        issue_number: parseInt('${{ github.event.inputs.pr_number }}'),
                        body: `Build for ${platform}: ${outcome}`
                    });